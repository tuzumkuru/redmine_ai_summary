<style>
  .summary-generating {
    opacity: 0.5;
  }
  .generating-text {
    margin-left: 10px;
    font-style: italic;
    color: #777;
  }
</style>

<div id="issue-summary-container">
  <%= render partial: 'ai_summaries/summary_content', locals: { issue: @issue } %>
</div>

<script>
  (function() {
    var container = document.getElementById('issue-summary-container');
    var issueId = <%= @issue.id %>;
    var pollingInterval;

    function startPolling() {
      if (pollingInterval) return;

      pollingInterval = setInterval(pollSummaryStatus, 3000);
    }

    function stopPolling() {
      clearInterval(pollingInterval);
      pollingInterval = null;
    }

    function pollSummaryStatus() {
      if (document.hidden) {
        return;
      }

      fetch('/issues/' + issueId + '/ai_summaries/content')
        .then(function(response) {
          return response.text();
        })
        .then(function(html) {
          container.innerHTML = html;
          var newStatus = container.querySelector('#issue-summary').dataset.status;
          if (newStatus === 'up_to_date') {
            stopPolling();
          }
        });
    }

    // Start polling on page load if summary is being generated
    if (container.querySelector('#issue-summary').dataset.status === 'generating') {
      startPolling();
    }

    // Handle click on the generate button
    document.addEventListener('click', function(event) {
      if (event.target && event.target.id === 'generate-summary-button') {
        // Use a short delay to allow the AJAX request to complete and update the status
        setTimeout(function() {
          startPolling();
        }, 500);
      }
    });
  })();
</script>