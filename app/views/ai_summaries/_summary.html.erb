<style>
  .summary-generating {
    opacity: 0.5;
  }
  .generating-text {
    margin-left: 10px;
    font-style: italic;
    color: #777;
  }
</style>

<div id="issue-summary-container">
  <% summary = @issue.issue_summary ? @issue.issue_summary.preloaded_for_render : nil %>
  <%= render partial: 'ai_summaries/summary_content', locals: { issue: @issue, summary: summary } %>
</div>

<script>
  (function() {
    var container = document.getElementById('issue-summary-container');
    var issueId = <%= @issue.id %>;
    var pollingInterval;

    window.startSummaryPolling = function() {
      if (pollingInterval) return;
      pollingInterval = setInterval(pollSummaryStatus, 3000);
    }

    function stopPolling() {
      clearInterval(pollingInterval);
      pollingInterval = null;
    }

    function pollSummaryStatus() {
      if (document.hidden) {
        return;
      }

      fetch('/issues/' + issueId + '/ai_summaries/content')
        .then(function(response) { return response.text(); })
        .then(function(html) {
          var tempDiv = document.createElement('div');
          tempDiv.innerHTML = html;

          var newStatus = tempDiv.querySelector('#issue-summary').dataset.status;
          container.innerHTML = html;

          if (newStatus === 'up_to_date') {
            stopPolling();
          }
        });
    }

    // Start polling on page load if summary is already being generated
    if (container.querySelector('#issue-summary').dataset.status === 'generating') {
      window.startSummaryPolling();
    }
  })();
</script>